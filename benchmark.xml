<?xml version="1.0"?>
<benchmark>
	<section name="String comparison" description="Different ways to compare strings">
		<hook type="before">
			<![CDATA[
			$a = 'The answer to life the universe and everything';
			$b = 'The answer is 42';
			]]>
		</hook>
		<command iteration="100">
			<![CDATA[
			$a == $b
			]]>
		</command>
		<command iteration="100">
			<![CDATA[
			!strcmp($a, $b)
			]]>
		</command>
		<command iteration="100">
			<![CDATA[
			strcmp($a, $b) == 0
			]]>
		</command>
		<command iteration="100">
			<![CDATA[
			strcmp($a, $b) === 0
			]]>
		</command>
		<command iteration="100">
			<![CDATA[
			strcasecmp($a, $b) === 0
			]]>
		</command>
	</section>
	<section name="String output" description="Echo vs Print">
		<hook type="before">
			<![CDATA[
			$alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
			]]>
		</hook>
		<command>
			<![CDATA[
			echo '';
			]]>
		</command>
		<command>
			<![CDATA[
			print '';
			]]>
		</command>
		<command>
			<![CDATA[
			echo 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
			]]>
		</command>
		<command>
			<![CDATA[
			print 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
			]]>
		</command>
		<command>
			<![CDATA[
			echo '123'.'456'.'789';
			]]>
		</command>
		<command>
			<![CDATA[
			echo '123','456','789';
			]]>
		</command>
		<command>
			<![CDATA[
			print '123'.'456'.'789';
			]]>
		</command>
		<command>
			<![CDATA[
			echo 'ABCDEFGHIJKLM'.$alphabet.'NOPQRSTUVWXYZ'.$alphabet;
			]]>
		</command>
		<command>
			<![CDATA[
			echo 'ABCDEFGHIJKLM',$alphabet,'NOPQRSTUVWXYZ',$alphabet;
			]]>
		</command>
		<command>
			<![CDATA[
			print 'ABCDEFGHIJKLM'.$alphabet.'NOPQRSTUVWXYZ'.$alphabet;
			]]>
		</command>
		<!--
		<command>
			<![CDATA[
			echo $alphabet.$alphabet.$alphabet.alphabet;
			]]>
		</command>
		<command>
			<![CDATA[
			echo $alphabet,$alphabet,$alphabet,alphabet;
			]]>
		</command>
		<command>
			<![CDATA[
			print $alphabet.$alphabet.$alphabet.alphabet;
			]]>
		</command>
		-->
	</section>
	<section name="Counting Loops" description="For vs. While">
		<command iteration="1">
			<![CDATA[
			for($i = 0; $i < 10000000; ++$i);
			]]>
		</command>
		<command iteration="1">
			<![CDATA[
			$i = 0; while($i < 10000000) ++$i;
			]]>
		</command>
	</section>
	<section name="Increment" description="++$i vs $i++">
		<command iteration="1">
			<![CDATA[
			for($i = 0; $i < 1000000; $i++);
			]]>
		</command>
		<command iteration="1">
			<![CDATA[
			for($i = 0; $i < 1000000; ++$i);
			]]>
		</command>
	</section>
	<section name="Variable assignment" description="Where to place variables to display">
		<hook type="before">
			<![CDATA[
			$i = 'ABC';
			]]>
		</hook>
		<command>
			<![CDATA[
			$string = 'This is a variable : '.$i; 
			]]>
		</command>
		<command>
			<![CDATA[
			$string = "This is a variable : ".$i;
			]]>
		</command>
		<command>
			<![CDATA[
			$string = "This is a variable : $i";
			]]>
		</command>
	</section>
	<section name="Testing nullity" description="is_null vs === NULL">
		<hook type="before">
			<![CDATA[
			$i = 'ABC';
			]]>
		</hook>
		<command>
			<![CDATA[
			$i === NULL; 
			]]>
		</command>
		<command>
			<![CDATA[
			is_null($i);
			]]>
		</command>
	</section>
	<section name="Declaration and variable initialization" description="Best way to declare a variable with the same content">
		<command>
			<![CDATA[
			$var1 = 'Something';
			$var2 = 'Something';
			]]>
		</command>
		<command>
			<![CDATA[
			$var1 = 'Something';
			$var2 = $var1;
			]]>
		</command>
		<command>
			<![CDATA[
			$var1 = $var2 = 'Something';
			]]>
		</command>
	</section>
	<section name="Condition tests" description="If, switch or ternary operator">
		<hook type="before">
			<![CDATA[
			$i = 1;
			]]>
		</hook>
		<command>
			<![CDATA[
			++$i;
			if ($i % 2 == 1) $var = 0;
			else $var = 1;
			]]>
		</command>
		<command>
			<![CDATA[
			++$i;
			switch($i % 2)
			{
			   case 1: $var = 0; break;
			   default: $var = 1;
			}
			]]>
		</command>
		<command>
			<![CDATA[
			++$i;
			$var = (($i % 2 == 1) ? 0 : 1);
			]]>
		</command>
	</section>
	<section name="Condition tests 2" description="If, switch or ternary operator">
		<hook type="before">
			<![CDATA[
			$i = 0;
			]]>
		</hook>
		<hook type="loop_end">
			<![CDATA[
			$i++;
			]]>
		</hook>
		<command>
			<![CDATA[
			$var = $i % 8;
			if ($var == 0) $test = 0;
			elseif ($var == 1) $test = 1;
			elseif ($var == 2) $test = 2;
			elseif ($var == 3) $test = 3;
			elseif ($var == 4) $test = 4;
			elseif ($var == 5) $test = 5;
			elseif ($var == 6) $test = 6;
			else $test = 7;
			]]>
		</command>
		<command>
			<![CDATA[
			$var = $i % 8;
			switch($var)
			{
			   case 0: $test = 0; break;
			   case 1: $test = 1; break;
			   case 2: $test = 2; break;
			   case 3: $test = 3; break;
			   case 4: $test = 4; break;
			   case 5: $test = 5; break;
			   case 6: $test = 6; break;
			   default: $test = 7;
			}
			]]>
		</command>
		<!--
		<command>
			<![CDATA[
			$test = ($var == 0) ? 0 : (
			        ($var == 1) ? 1 : (
			        ($var == 2) ? 2 : (
			        ($var == 3) ? 3 : (
			        ($var == 4) ? 4 : (
			        ($var == 5) ? 5 : (
			        ($var == 6) ? 6 : 7))))));
			]]>
		</command>
		-->
	</section>
	<section name="Count in a loop" description="Count command in or outside of the loop">
		<hook type="before">
			<![CDATA[
			$j = 0;
			$array = array('a', 'b', 'c', 'd', 'e');
			]]>
		</hook>
		<command>
			<![CDATA[
			$n = count($array);
			for ($i = 0; $i < $n; $i++) $j++;
			]]>
		</command>
		<command>
			<![CDATA[
			for ($i = 0; $i < count($array); $i++) $j++;
			]]>
		</command>
	</section>
	<section name="Array iteration" description="Iterate over arrays with for, foreach and while">
		<hook type="before">
			<![CDATA[
			$n = 100;
			$tab = range(1, $n);
			srand((float)microtime() * 1000000);
			shuffle($tab);
			]]>
		</hook>
		<command iteration="1000">
			<![CDATA[
			for ($i = 0; $i < $n; ++$i) $test = $tab[$i];
			]]>
		</command>
		<command iteration="1000">
			<![CDATA[
			foreach ($tab as $key => $value) $test = $value;
			]]>
		</command>
		<command iteration="1000">
			<![CDATA[
			foreach ($tab as $value) $test = $value;
			]]>
		</command>
		<command iteration="1000">
			<![CDATA[
			while(list($key, $value) = each($tab)) $test = $value;
			reset($tab);
			]]>
		</command>
		<command iteration="1000">
			<![CDATA[
			$i = 0;
			while ($i < $n) $test = $tab[$i++];
			]]>
		</command>
	</section>
	<section name="Array implode" description="Different way to implode arrays">
		<hook type="before">
			<![CDATA[
			$array = ('a', 'b', 'c');
			]]>
		</hook>
		<command iteration="10">
			<![CDATA[
			$string = implode(" ", $array);
			]]>
		</command>
		<command iteration="10">
			<![CDATA[
			$string = "$array[0] $array[1] $array[2]";
			]]>
		</command>
		<command iteration="10">
			<![CDATA[
			$string = $array[0] . " " . $array[1] . " " . $array[2];
			]]>
		</command>
		<command iteration="10">
			<![CDATA[
			$string = sprintf("%s %s %s", $array[0], $array[1], $array[2]);
			]]>
		</command>
		<command iteration="10">
			<![CDATA[
			$string = vsprintf("%s %s %s", $array)
			]]>
		</command>
	</section>
	<section name="Array explode" description="Different way to explode arrays">
		<hook type="before">
			<![CDATA[
			$string = 'The answer is 42';
			]]>
		</hook>
		<command iteration="10">
			<![CDATA[
			$array = explode(" ", $string)
			]]>
		</command>
		<command iteration="10">
			<![CDATA[
			$array = split(" ", $string)
			]]>
		</command>
		<command iteration="10">
			<![CDATA[
			$array = preg_split("/,/", $string)
			]]>
		</command>
		<command iteration="10">
			<![CDATA[
			$matches = array();
			$array = preg_match_all('/[^,]+/', $string, $matches)
			]]>
		</command>
	</section>
	<section name="Replacements in strings" description="With str_replace and strstr">
		<hook type="before">
			<![CDATA[
			$string = 'abcxyz';
			]]>
		</hook>
		<command>
			<![CDATA[
			$string = str_replace('x', 'y', $string); 
			$string = str_replace('a', 'b', $string);
			]]>
		</command>
		<command>
			<![CDATA[
			$string = str_replace('x', 'y', str_replace('a', 'b', $string));
			]]>
		</command>
		<command>
			<![CDATA[
			$string = str_replace(array('x', 'a'), array('y', 'b'), $string);
			]]>
		</command>
		<command>
			<![CDATA[
			$string = strtr($string, 'ax', 'by');
			]]>
		</command>
	</section>
</benchmark>